1.Azure Virtual Network --> Created as a home or container for VMs. A VN is assigned a range of IP addresses. 
                            Within this range you can create a subnet whose IP range will be within the IP address range of the VN.
                            Within the subnet you can have resources who inturn can be assigned IPs from the range assigned to the subnet.
                            These IPs are private IPs and are used for communication within the VN only. 
                            For exposure to the outside world a public IP needs to be assigned.
                            For a VM to be added to an existing VN we have to make sure that both share the same region/location.
2. Application Security Groups --> Used to control traffic within servers hosted in the same group, so we can logically group together DB servers and web servers and handle
                                   traffic differently.
3.Vritual Network Peering --> When connecting two virtual networks together we can use virtual network peering. Here we create a private IP address between two VNs
                              and then the VMs in both VNs can start talking to each other with the help of this private IP
4.Point to Site VPN Connection --> Use case if when we want to connect a few VMs to a virtual network over the internet. To make this connection more secure
                                   we can use a VPN gateway which will enable a point to site connection tot he private IP of the virtual network. THis whole handshake happens 
                                   via certificates. 
5.Site to Site VPN connection -> USed when an on prem DC needs to connec to the Azure network. The on prem DC needs to have a routing device which has a public IP address.
                                 The Azure network needs to have a VPN gateway and a local network gateway(which stores public IP of the routing device).
6.Azure ExpressRoute --> Allows connections to Azure network using dedicated internet line. Special hardware is needed and patners in the region need to be available.                                 
                                 
-----------------------
AZURE STORAGE ACCOUNTS
-----------------------
Storage account name needs to be unique across azure i.e. no two people on earth can use the same name.

1. Blob Storage or containers --> Used to store object like data such as files, videos, images etc. Blob storage is also used as data disks for VMs and in this case the 
data is stored as VHD or virtual harddisk type files. Blobs have different access tiers Hot, Cool and Archive. For storage only Hot access tier has the highest prices whilst
the archive tier is lowest pricest. However whilst accessing the data, Hot acces tier is lower priced i.e.to store data in hot tier you have to pay more
but to access data in hot tier you have to pay less. These costs also depend on the operation i.e. read, write etc.

2. Table Storage --> Store data in table form similar to a NOSQL DB.

3. File Storage -->. File shares which can be ysed to share files between users or systems. This file sharing uses the SMB protocol. They are different from te 
                     Blob storage in a sense that you can directly connect to a fileshare and don't have to use URLS to access each file.
                     You can also have multiple systems connect to same fileshare. On file share you can also make directories.

4. Queues --> Queues are used for managing communications across systems where one system can write to a message queue and the other system can read from the queue.

Redundancy --> Locally redundant means copies of data will be stored on different servers in same DC
               Zone redundant means copies of data will be stoerd in different DCs in the same region.
               Geo redundant means copies of data will be stored in different regions.

-----------------------
AZURE DATABASES
-----------------------
1. Commissioning a DB can be done by spinning up a VM and then installing the DB separately or using PaaS i.e. available DBs as service.
2. Both approaches have their pros and cons.
3. Spinning up VM and isntalling DB gives you control over the versions but has overhead of implementing the high availability, scheduling backup and patching of DB.
4. When using PaaS DB 99.99% availability is ensured. Patching, backup and maintenance are handled by Azure.
5. Azure SQl Managed INstance --> This is an option when the company moving to cloud already has an SQL Server licenese and simply wants to lift and shift it to cloud. Provides 
                                   automated backups, patching and maintenance. This can also be added to vrtual network.
6. Azure MySQL & PostgreSQL --> Fully managed service to create a mysql DB. Pros and cons are same as other managed instances i.e point #5                                   


-----------------------
AZURE DATA WAREHOUSE
-----------------------
1. Called Azure Synapse. Will need a Gen2 account
2. In the synapse workspace you can create sqlpools which are similar to a normal DB but has a lot more different features.Azure data factory is used to copy data from DBs
to data warehouses.

-----------------------
AZURE COSMOS DB
-----------------------
1. NoSQL DB offering by Azure.
2. It's fully managed and hence backup, maintenance and patching is handled by Azure.
3. Various APIs such as SQL API, Table API, MongoDb API, cassandra API and Gremlin APi available to query various types of data.

-----------------------
AZURE DataBricks
-----------------------
1. Based on apache spark and used in BigData and ML to analyse large data sets.
2. It is fully managed.

-----------------------
Scalability
-----------------------
1. Resources scheduled on Azure can increase in storage, memory etc based on the need of the application. This is how Azure helps us to achieve scalability.
2. ScaleSet is another good example which the VMs can be a part of and the scaleset wil automatically increase or decrease the number of VMs available based
on traffic or load.
3. Deploying ap on each VM of the scaleset is responsibility of the developers.


-----------------------
Elascicity 
-----------------------
1. Elasticity is how fast the system can scale.

-----------------------
Aure Load Balancer
-----------------------
1. Backend pool needs to be configured which contains a list of IPs of all VMs.
2. The backend pool is then attached to the load balancer. The users can they hit IP of load balancer which redirects to a VM.
3. A heartbeat or healtcheck also needs to be in place to make sure all VMs are healthy.
4. Load balancer rules also need to be in place to route traffic.

